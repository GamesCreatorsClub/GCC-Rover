#!/usr/bin/env python3

import os
import sys
import pyroscommon as pc


if len(pc.args) == 0:
    sys.exit(os.system(pc.binDir + "/pyros-help"))

localCommands = ["alias", "help"]
commandAlias = {
    "kill": "stop",
    "rm": "remove"
}

host = None

pc.loadAliases()


def commandExists(cmd):
    if os.path.exists(pc.binDir + "/pyros-" + cmd):
        return cmd
    if cmd in commandAlias:
        cmd = commandAlias[cmd]
        if os.path.exists(pc.binDir + "/pyros-" + cmd):
            return cmd
    return None

args = pc.args

if len(args) == 0:
    # if not arguments then display help
    args.append("help")

if args[0] == "-h":
    # if -h then display help
    args[0] = "help"


command = commandExists(args[0])
if command is None:
    # first argument is not a command then it is hostname
    host = args[0]
    del args[0]
    if len(args) == 0:
        # we have host but no command - display help
        args.append("help")

    if args[0] == "-h":
        # if -h then display help
        args[0] = "help"

else:
    del args[0]


if command is None:
    command = commandExists(args[0])
    del args[0]

if command is not None:
    if len(args) > 0 and (args[0] == "-h"):
        fullCommand = pc.binDir + "/pyros-" + command + pc.expandArgs(args)
        sys.exit(os.system(fullCommand))

    if command not in localCommands:
        if host is None:
            if pc.defaultAlias is not None:
                host = pc.defaultAlias
            else:
                print("No default alias is set. Use pyros <host[:port]> <command> <args> format or set default alias with:")
                print("")
                print("    pyros alias default <host>")
                sys.exit(1)
        args.insert(0, host)

    fullCommand = pc.binDir + "/pyros-" + command + pc.expandArgs(args)
    sys.exit(os.system(fullCommand))

print("Unknown command " + str(command))
sys.exit(1)
