#!/usr/bin/env python3

#
# Copyright 2016-2017 Games Creators Club
#
# MIT License
#

import os
import sys
import pyroscommon as pc
import time
import threading


if len(pc.args) == 0:
    sys.exit(exec(open(pc.binDir + "/pyros-help").read()))

localCommands = ["alias", "discover", "help"]
commandAlias = {
    "kill": "stop",
    "rm": "remove"
}

host = None

pc.loadAliases()

discoveryFile = pc.installDir + "/.discovery"
DISCOVERY_TIMEOUT = 60  # one minute


def commandExists(cmd):
    if os.path.exists(pc.binDir + "/pyros-" + cmd):
        return cmd
    if cmd in commandAlias:
        cmd = commandAlias[cmd]
        if os.path.exists(pc.binDir + "/pyros-" + cmd):
            return cmd
    return None


def readDiscovery():
    res = {}
    try:
        with open(discoveryFile, "rt") as file:
            lines = file.readlines()

            for line in lines:
                split = line.split("=")
                if len(split) == 2:
                    key = split[0].strip()
                    value = split[1].strip()
                    res[key] = value
    except BaseException as e:
        print(e)
        pass

    return res


def runDiscovery():
    global done
    rovers = {}
    done = False

    def processResponse(resp):
        err = 1
        details = {}
        for entry in resp.split(";"):
            split = entry.split("=")
            if len(split) == 2:
                details[split[0]] = split[1]
            else:
                details["ERROR" + str(err)] = entry

        rovers[details["NAME"]] = details["IP"] + ":" + details["PORT"]

    def receiveDiscovery():
        global done

        pc.receiveDiscoveryPackets(processResponse)
        done = True

    pc.setupListening()

    thread = threading.Thread(target=receiveDiscovery, args=())
    thread.daemon = False
    thread.start()

    pc.sendDiscoveryPacket("Q#")

    while not done:
        time.sleep(0.1)

    with open(discoveryFile, "wt") as file:
        for roverName in rovers:
            file.write(roverName + "=" + rovers[roverName] + "\n")


args = pc.args

if len(args) == 0:
    # if not arguments then display help
    args.append("help")

if args[0] == "-h":
    # if -h then display help
    args[0] = "help"


command = commandExists(args[0])
if command is None:
    # first argument is not a command then it is hostname
    host = args[0]
    del args[0]
    if len(args) == 0:
        # we have host but no command - display help
        args.append("help")

    if args[0] == "-h":
        # if -h then display help
        args[0] = "help"

else:
    del args[0]


if command is None:
    command = commandExists(args[0])
    del args[0]

if command is not None:
    if len(args) > 0 and (args[0] == "-h"):
        sys.argv = args
        fullCommand = os.path.join(pc.binDir, "pyros-" + command)
        sys.exit(exec(open(fullCommand).read()))

    if command not in localCommands:
        if host is None:
            if pc.defaultAlias is not None:
                host = pc.defaultAlias
            else:
                if not os.path.exists(discoveryFile) or os.path.getmtime(discoveryFile) + DISCOVERY_TIMEOUT < time.time():
                    runDiscovery()

                discoveredRovers = readDiscovery()
                if len(discoveredRovers) == 1:
                    host = discoveredRovers[list(discoveredRovers.keys())[0]]
                elif len(discoveredRovers) == 0:
                    print("No rovers were discovered. Please check if discovery service is running or supply IP:PORT")
                    sys.exit(1)
                else:
                    print("More than one rover is discovered. Please select one by its name.")

        args.insert(0, host)

    sys.argv = args
    fullCommand = os.path.join(pc.binDir, "pyros-" + command)
    sys.exit(exec(open(fullCommand).read()))

print("Unknown command " + str(command))
sys.exit(1)
